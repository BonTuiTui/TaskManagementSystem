@model TaskManagementSystem.ViewModels.ProfileViewModel
@using TaskManagementSystem.Areas.Identity.Data
@using TaskManagementSystem.Services.Proxies
@inject UserManagementProxy _realService
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager

@{
    var user = await _userManager.GetUserAsync(User);
    var hasPassword = await _realService.HasPasswordAsync(user);

}
<h1 class="profile-header">User Profile</h1>
<hr class="profile-divider" />
<div class="profile-container">
    
    <form asp-action="Profile" method="post" class="form-custom">
        <input type="hidden" asp-for="UserId" />

        <div class="form-group-profile">
            <label asp-for="UserName" class="label-profile"></label>
            <input asp-for="UserName" class="input-profile" />
            <span asp-validation-for="UserName" class="error-profile"></span>
        </div>
        <div class="form-group-profile">
            <label asp-for="Email" class="label-profile"></label>
            <input asp-for="Email" class="input-profile" />
            <span asp-validation-for="Email" class="error-profile"></span>
        </div>
        <div class="form-group-profile">
            <label asp-for="FullName" class="label-profile"></label>
            <input asp-for="FullName" class="input-profile" />
            <span asp-validation-for="FullName" class="error-profile"></span>
        </div>
        <button type="submit" class="btn-profile">Save</button>
        <a class="btn-profile" asp-controller="Account" asp-action="ResendConfirmationEmail">Confirm Email</a>
    </form>
</div>





@if (User.Identity.IsAuthenticated && !hasPassword)
{
    <div class="alert alert-warning" role="alert">
        You are using an external login account that hasn't registered a password yet.
        Please set your password to continue using our services.
    </div>

    <h2>Set Password</h2>
    <form asp-action="AddPassword" method="post">
        <div class="form-group">
            <label for="newPassword">New Password:</label>
            <input type="password" id="newPassword" name="NewPassword" class="form-control" />
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm New Password:</label>
            <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Set Password</button>
    </form>
}

@if (!ViewData.ModelState.IsValid)
{
<div class="alert-profile" role="alert">
    <strong>Error:</strong> There was a problem with your profile save.
    <ul class="alert-list-profile">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
        <li class="alert-item-profile">@error.ErrorMessage</li>
        }
    </ul>
</div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}