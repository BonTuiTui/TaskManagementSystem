@model TaskManagementSystem.ViewModels.ProfileViewModel
@using TaskManagementSystem.Areas.Identity.Data
@using TaskManagementSystem.Services.Proxies
@inject UserManagementProxy _realService
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager

@{
    var user = await _userManager.GetUserAsync(User);
    var hasPassword = await _realService.HasPasswordAsync(user);

}
<h1>User Profile</h1>

<form asp-action="Profile" method="post">
    <input type="hidden" asp-for="UserId" />

    <div class="form-group">
        <label asp-for="UserName"></label>
        <input asp-for="UserName" class="form-control" />
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>

<div class="form-group">
    <a class="btn btn-primary" asp-controller="Account"
       asp-action="ResendConfirmationEmail">Confirm Email</a>
</div>



@if (User.Identity.IsAuthenticated && !hasPassword)
{
    <div class="alert alert-warning" role="alert">
        You are using an external login account that hasn't registered a password yet.
        Please set your password to continue using our services.
    </div>

    <h2>Set Password</h2>
    <form asp-action="AddPassword" method="post">
        <div class="form-group">
            <label for="newPassword">New Password:</label>
            <input type="password" id="newPassword" name="NewPassword" class="form-control" />
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm New Password:</label>
            <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Set Password</button>
    </form>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger" role="alert">
        <strong>Error:</strong> There was a problem with your profile save.
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}