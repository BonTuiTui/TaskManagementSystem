@{
    var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TMSystem</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/sidebarStyle.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <style>

        /* Màu cho thông báo chưa đọc */
        .unread-notification {
            color: red;
            font-weight: bold;
        }

        /* Màu cho thông báo đã đọc */
        .read-notification {
            color: black;
        }

        /* Biểu tượng cho thông báo chưa đọc */
        .unread-notification::before {
            content: "\2022"; /* Biểu tượng hình tròn */
            margin-right: 5px;
            color: red;
        }

        /* Biểu tượng cho thông báo đã đọc */
        .read-notification::before {
            content: "\2713"; /* Biểu tượng đánh dấu tick */
            margin-right: 5px;
            color: green;
        }

    </style>
</head>

<body>
    <div class="d-flex">
        <div class="flex-shrink-0 p-3" style="width: 240px;">
            <!-- Sidebar content here -->
            <a href="/"
               class="d-flex align-items-center pb-3 mb-3 link-body-emphasis text-decoration-none border-bottom">
                <span class="fs-5 fw-semibold">TMSystem</span>
            </a>
            <p>Hello, @User.Identity.Name !</p>
            <ul class="list-unstyled ps-0">
                <li class="mb-1">
                    <div class="d-flex align-items-center justify-content-between">
                        <button class="btn btn-toggle d-inline-flex align-items-center rounded border-0 collapsed"
                                data-bs-toggle="collapse" data-bs-target="#projects-collapse" aria-expanded="false">
                            Projects
                        </button>
                        <a class="btn btn-outline-primary ml-2 text-end" asp-area="" asp-controller="Projects"
                           asp-action="Add"><i class="bi bi-plus"></i></a>
                    </div>
                    <div class="collapse" id="projects-collapse">
                        @await Component.InvokeAsync("Projects")
                    </div>
                </li>
                <li class="border-top my-3"></li>
                <li class="mb-1">
                    <button class="btn btn-toggle d-inline-flex align-items-center rounded border-0 collapsed"
                            data-bs-toggle="collapse" data-bs-target="#account-collapse" aria-expanded="true">
                        Account
                    </button>
                    <div class="collapse show" id="account-collapse">
                        <ul class="btn-toggle-nav list-unstyled fw-normal pb-1 small">
                            <li>
                                <a asp-controller="Account" asp-action="Profile"
                                   class="link-body-emphasis d-inline-flex text-decoration-none rounded">Profile</a>
                            </li>
                            @if (User.IsInRole("admin"))
                            {
                                <li>
                                    <a asp-controller="Admin" asp-action="ManageUsers"
                                       class="link-body-emphasis d-inline-flex text-decoration-none rounded">
                                        Manage
                                        Users
                                    </a>
                                </li>
                            }
                            <li>
                                <a href="#" class="link-body-emphasis d-inline-flex text-decoration-none rounded"
                                   data-bs-toggle="modal" data-bs-target="#notificationModal"
                                   id="notificationLink">Notification</a>
                            </li>
                            <li>
                                <form id="logoutForm" asp-area="" asp-controller="Account" asp-action="Logout"
                                      method="post" class="form-inline">
                                    <a href="javascript:void(0);" id="logoutLink" class="nav-link text-dark">
                                        Sign out
                                    </a>
                                </form>
                                <script>document.getElementById('logoutLink').addEventListener('click', function () {
                                        document.getElementById('logoutForm').submit();
                                    });</script>
                            </li>
                        </ul>
                    </div>
                </li>
            </ul>
        </div>
        <div class="flex-grow-1">
            <!-- Main content here -->
            <main role="main" class="p-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationModalLabel">Notifications</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="notificationList">
                        <!-- Notifications will be displayed here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/sidebar.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
       $(document).ready(function () {
    // Load notifications when the modal is opened
    $('#notificationLink').on('click', function () {
        var userId = '@userId'; // Đảm bảo rằng @userId là giá trị đúng của userId
        $.ajax({
            url: '/Notifications/GetUserNotifications',
            method: 'GET',
            data: { userId: userId },
            success: function (data) {
                $('#notificationList').empty();
                data.forEach(function (notification) {
                    console.log(notification);
                    var notificationHtml = '<p class="';
                    notificationHtml += notification.isRead ? 'read-notification' : 'unread-notification';
                    notificationHtml += '">' + notification.notification_text + ' - ' + new Date(notification.createAt).toLocaleString() + '</p>';
                    $('#notificationList').append(notificationHtml);

                    // Thêm sự kiện click để đánh dấu thông báo là đã đọc
                    $('#notificationList').on('click', 'p', function () {
                        // Kiểm tra xem thông báo đã đọc hay chưa
                        if (!notification.isRead) {
                            // Thực hiện cập nhật trạng thái đã đọc
                            markNotificationAsRead(notification.notification_id);
                            // Thay đổi lớp CSS để hiển thị trạng thái đã đọc
                            $(this).removeClass('unread-notification').addClass('read-notification');
                        }
                    });
                });
            },
            error: function () {
                $('#notificationList').append('<p>Failed to load notifications.</p>');
            }
        });
    });
});

        // Hàm để đánh dấu thông báo là đã đọc
        function markNotificationAsRead(notification_id) {

            console.log("notificationId is: " + notification_id);
            $.ajax({
                url: '/Notifications/MarkAsRead',
                method: 'POST',
                data: { notificationId: notification_id },


                success: function (response) {
                    console.log('Notification marked as read.');
                    // Tùy chỉnh mã JS ở đây nếu cần
                },
                error: function (xhr, status, error) {
                    console.error('Failed to mark notification as read.');
                    console.error(xhr.responseText);
                    console.error(status);
                    console.error(error);
                }
            });
        }
 
    </script>

    @RenderSection("Scripts", required: false)
</body>

</html>